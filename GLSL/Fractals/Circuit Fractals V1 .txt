#version 150


uniform float time;
uniform vec2 resolution;
out vec4 fragColor;

mat2 rot(float a) {
    float s=sin(a);
    float c=cos(a);
    return mat2(c,s,-s,c);
}

vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

float sphere(vec3 p, float rad) {
    return length(p)-rad;
}

float box(vec3 p, vec3 c)
{
    p=abs(p)-c;
    return length(max(p,0.))+min(0.,max(p.z,max(p.x,p.y)));
}

void main()
{
    vec2 uv=gl_FragCoord.xy/resolution-.5;
    uv.x*=resolution.x/resolution.y;

    vec2 p=uv* 0.5 ;

    float ot = 1000;
    float ot2 = 1000; 
     const float iter= 20;

    
        for (float i=0.; i<iter; i++) {
        
        p=abs(p* 15 * sin(time * 0.1)); 
        p/=clamp(abs(p.x*p.y),3.9,10.7); 
        p-=0.2; 
        ot=min(ot,abs(p.x)+fract(p.y*.1+time*.5+i*.2)*.5); 
        ot2=min(ot2,length(p));
    }
    
    float c=smoothstep(0.5,0.9, min(ot , ot2) * mix(ot,ot2 , 2.01) * time ) * uv.x / p.y ;
    vec3 col = vec3(p.x * 3.,p.y,length(p)) * c + 0.0 * 0.03 ;
    col=mix(length(col )*vec3(.5),col ,10.999 ); 

    fragColor = vec4(col ,1.0);
}